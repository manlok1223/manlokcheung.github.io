import os
import discord
from asyncio import get_event_loop
import yt_dlp as youtube_dl
from discord.ext import commands
from dotenv import load_dotenv
import openai
import asyncio

load_dotenv(dotenv_path="/Users/manlokcheung/Documents/cs stuff/dc/bottoken.env")
token = os.getenv("DISCORD_BOT_TOKEN")
openai.api_key = os.getenv("OPEN_AI_TOKEN")

ytdl_format_options = {
    'format': 'bestaudio/best',
    'noplaylist': True,
}
ffmpeg_options = {
    'options' : '-vn'
}
ytdl = youtube_dl.YoutubeDL(ytdl_format_options)

class YTDLSource(discord.PCMVolumeTransformer):
    def __init__(self, source, *, data, volume = 0.5):
        super().__init__(source, volume)
        self.data = data
        self.title = data.get('title')
        self.url = data.get('url')

    @classmethod
    async def from_url(cls, url, *, loop=None, stream=False):
        loop = loop or get_event_loop()
        data = await loop.run_in_executor(None, lambda: ytdl.extract_info(url, download=not stream))
        if 'entries' in data:
            data = data['entries'][0]
        filename = data['url'] if stream else ytdl.prepare_filename(data)
        return cls(discord.FFmpegPCMAudio(filename, **ffmpeg_options), data=data)

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix="!", intents = intents)

@bot.command()
async def draw(ctx, *, prompt):
    try:
        response = await asyncio.to_thread(
            openai.Image.create,
            prompt=prompt, 
            n=1, 
            size="512x512")
        response_dict = response.to_dict()
        image_url = response_dict['data'][0]['url']
        await ctx.send(f"你張相啊柒頭\n{image_url}")
    except Exception as e:
        await ctx.send("圖片生成失敗，請稍後再試！")
        print(f"Error during image generation: {e}")

@bot.command()
async def chat(ctx, *, message):
    try:
        response = await asyncio.to_thread(
            openai.ChatCompletion.create,
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "你是一個香港on9仔。"},
                {"role": "user", "content": message},
            ],
            max_tokens=100,
            temperature=0.7
        )
        response_dict = response.to_dict()
        reply = response_dict['choices'][0]['message']['content']
        await ctx.send(reply)
    except Exception as e:
        await ctx.send("有問題")
        print(f"Error during chat completion: {e}")

@bot.command()
async def join(ctx):
    if ctx.author.voice:
        channel = ctx.author.voice.channel
        if ctx.voice_client is None:
            await channel.connect()
            await ctx.send("on9搵我？")
        else:
            await ctx.send("我係到啦on9")
    else:
        await ctx.send("你都唔係頻道 搵我把撚啊")

@bot.command()
async def leave(ctx):
    if ctx.voice_client:
        await ctx.voice_client.disconnect()
        await ctx.send("玩完就走 係咁架啦")
    else:
        await ctx.send("你都冇加過我入嚟")

@bot.command()
async def play(ctx, url):
    if not ctx.author.voice:
        await ctx.send("加入語音頻道先啦 唔係點聽啊高手")
        return

    if ctx.voice_client is None:
        await ctx.invoke(join)

    async with ctx.typing():
        try:
            player = await YTDLSource.from_url(url, loop=bot.loop)
            ctx.voice_client.play(player, after=lambda e: print(f'唔撚得：{e}')if e else None)
            await ctx.send(f"你首歌名啊柒頭： **{player.title}**")
        except youtube_dl.utils.DownloadError:
            await ctx.send("係咪玩野啊 比條假link")
        except Exception as e:
            await ctx.send("唔撚知點解啊")
            print(e)

@bot.command()
async def resume(ctx):
    if ctx.voice_client and ctx.voice_client.is_paused():
        ctx.voice_client.resume()
        await ctx.send("聽一半唔聽一半都有")
    else:
        await ctx.send("冇野可以播 聽我唱歌囉一係")

@bot.command()
async def stop(ctx):
    if ctx.voice_client and ctx.voice_client.is_playing():
        ctx.voice_client.stop()
        await ctx.send("唔聽唔好聽")
    else:
        await ctx.send("冇野可以停 咪撚再玩野")

@bot.command()
@commands.has_permissions(administrator=True)
async def synccommands(ctx):
    await bot.tree.sync()
    await ctx.send("搞掂")

@bot.hybrid_command()
async def ping(ctx):
    """無撚用"""
    await ctx.send("Pong!")

@bot.hybrid_command()
async def hello(ctx):
    """無撚用"""
    await ctx.send("做乜撚野")

@bot.hybrid_command()
async def add(ctx, a: int, b: int):
    """無撚用"""
    await ctx.send(f"加埋係{a+b}")

@bot.hybrid_command()
async def fun(ctx):
    await ctx.send("你係？", view=PlayView())

class PlayView(discord.ui.View):
    @discord.ui.button(label="柒頭", style=discord.ButtonStyle.green)
    async def stop(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.edit_message(content="有自知之明", view=None)

@bot.event
async def on_member_remove(member):
    channel = discord.utils.get(member.guild.text_channels, name="general")
    if channel:
        await channel.send(f"{member.name}佢走撚咗。。。")

@bot.event
async def on_member_join(member):
    channel = discord.utils.get(member.guild.text_channels, name="general")
    if channel:
        await channel.send(f"你{member.mention}邊撚個啊!")

@bot.event
async def on_ready():
    print(f"Logged in as {bot.user}!")
    print("Loaded commands:")
    for cmd in bot.commands:
        print(f"- {cmd.name}")


@bot.event
async def on_message(message):
    if message.author == bot.user:
        return
    print(f"Received message: {message.content}")  
    await bot.process_commands(message)

bot.run(token)